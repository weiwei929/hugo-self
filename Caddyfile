# Hugo-Self Caddy 配置文件
# 适用于生产环境部署

# 主站点配置
yourdomain.com {
    # 网站根目录（Hugo 生成的静态文件）
    root * /var/www/hugo-self/public
    
    # 启用文件服务
    file_server
    
    # 启用 gzip 压缩
    encode gzip
    
    # 设置缓存头
    @static {
        path *.css *.js *.png *.jpg *.jpeg *.gif *.ico *.svg *.woff *.woff2 *.ttf *.eot
    }
    header @static Cache-Control "public, max-age=31536000"
    
    # HTML 文件缓存设置
    @html {
        path *.html
    }
    header @html Cache-Control "public, max-age=3600"
    
    # 安全头设置
    header {
        # 防止点击劫持
        X-Frame-Options "SAMEORIGIN"
        # 防止 MIME 类型嗅探
        X-Content-Type-Options "nosniff"
        # XSS 保护
        X-XSS-Protection "1; mode=block"
        # 引用策略
        Referrer-Policy "strict-origin-when-cross-origin"
        # 内容安全策略
        Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline'; img-src 'self' data:; font-src 'self'"
    }
    
    # 处理 SPA 路由（如果需要）
    try_files {path} {path}/ /index.html
    
    # 错误页面
    handle_errors {
        @404 {
            expression {http.error.status_code} == 404
        }
        rewrite @404 /404.html
        file_server
    }
    
    # 日志记录
    log {
        output file /var/log/caddy/hugo-self.log {
            roll_size 100mb
            roll_keep 5
            roll_keep_for 720h
        }
        format json
        level INFO
    }
}

# 开发环境配置（可选）
localhost:8080 {
    root * ./public
    file_server
    encode gzip
    
    # 开发环境允许更宽松的 CSP
    header Content-Security-Policy "default-src 'self' 'unsafe-inline' 'unsafe-eval'; img-src 'self' data: blob:;"
    
    log {
        output stdout
        format console
        level DEBUG
    }
}

# 管理后台特殊配置（如果需要额外的安全措施）
yourdomain.com/admin/* {
    # 可以添加额外的安全措施，如 IP 白名单
    # @allowed_ips {
    #     remote_ip 192.168.1.0/24 10.0.0.0/8
    # }
    # abort @allowed_ips
    
    # 管理后台的额外安全头
    header {
        X-Robots-Tag "noindex, nofollow"
        Cache-Control "no-cache, no-store, must-revalidate"
    }
}

# HTTPS 重定向（如果使用 HTTP）
http://yourdomain.com {
    redir https://yourdomain.com{uri} permanent
}

# 全局配置
{
    # 邮箱用于 Let's Encrypt 证书申请
    email your-email@example.com
    
    # 管理端点配置
    admin localhost:2019
    
    # 日志配置
    log {
        level INFO
    }
    
    # 自动 HTTPS
    auto_https on
    
    # 服务器配置
    servers {
        protocol {
            experimental_http3
        }
    }
}
